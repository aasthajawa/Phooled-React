{"ast":null,"code":"var _jsxFileName = \"/Users/aasthajawa/Desktop/myPhishGame/phooledgame/phooledgame-frontend/src/components/Game/Game.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport Header from '../Header/Header';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport './Game.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Game = () => {\n  _s();\n  const location = useLocation();\n  const navigate = useNavigate();\n  const [avatars, setAvatars] = useState([]);\n  const [selectedAvatar, setSelectedAvatar] = useState(null);\n  useEffect(() => {\n    // Fetch avatars from the backend when the component mounts\n    fetchAvatars();\n  }, []);\n  const createRoomAPI = async () => {\n    try {\n      const user = location.state;\n      console.log(\"yha tak aya \", user);\n      const response = await fetch('http://localhost:8000/api/create-room', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n          // Add any other headers if needed\n        },\n        body: JSON.stringify({\n          roomName: \"roomxyz\",\n          // Replace with your desired room name\n          gameStarter: user.User.user_id\n        })\n      });\n      console.log(\"response\", response);\n      if (response.ok) {\n        const data = await response.json();\n        console.log(\"game data\", data);\n        // Room created successfully, redirect to the Play page\n        navigate(data.room.room_url, {\n          state: {\n            Room: data.room\n          }\n        });\n      } else {\n        // Handle the case where room creation failed\n        console.error('Error creating room:', response.statusText);\n      }\n    } catch (error) {\n      console.error('Error creating room:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"main\",\n      className: \"contentOFF\",\n      role: \"main\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"hero-content text-center\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"max-w-md\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-body\",\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                className: \"card-title\",\n                children: \"Select Avatar\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"avatar-picker\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"startbutton\",\n            onClick: createRoomAPI,\n            children: \"Start new game\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 10\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 8\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 7\n  }, this);\n};\n_s(Game, \"xqeTladAUrh/fxOrtZxsojnICeo=\", false, function () {\n  return [useLocation, useNavigate];\n});\n_c = Game;\nexport default Game;\nvar _c;\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["React","Header","useNavigate","useLocation","jsxDEV","_jsxDEV","Game","_s","location","navigate","avatars","setAvatars","useState","selectedAvatar","setSelectedAvatar","useEffect","fetchAvatars","createRoomAPI","user","state","console","log","response","fetch","method","headers","body","JSON","stringify","roomName","gameStarter","User","user_id","ok","data","json","room","room_url","Room","error","statusText","children","fileName","_jsxFileName","lineNumber","columnNumber","id","className","role","onClick","_c","$RefreshReg$"],"sources":["/Users/aasthajawa/Desktop/myPhishGame/phooledgame/phooledgame-frontend/src/components/Game/Game.js"],"sourcesContent":["import React from 'react';\nimport Header from '../Header/Header';\nimport { useNavigate ,useLocation} from 'react-router-dom';\n\nimport './Game.css';\nconst Game = () => {\n  const location = useLocation();\n  const navigate = useNavigate();\n  const [avatars, setAvatars] = useState([]);\n  const [selectedAvatar, setSelectedAvatar] = useState(null);\n  \n  useEffect(() => {\n    // Fetch avatars from the backend when the component mounts\n    fetchAvatars();\n  }, []);\n\n  const createRoomAPI = async () => {\n    try {\n      const user =location.state;\n      console.log(\"yha tak aya \", user);\n      const response = await fetch('http://localhost:8000/api/create-room', {\n        \n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          // Add any other headers if needed\n        },\n        body: JSON.stringify({\n          roomName: \"roomxyz\",  // Replace with your desired room name\n          gameStarter: user.User.user_id,\n        }),\n      });\n      console.log(\"response\",response)\n      if (response.ok) {\n        const data = await response.json();\n        console.log(\"game data\",data);\n        // Room created successfully, redirect to the Play page\n        navigate(data.room.room_url,  { state: { Room: data.room} });\n      } else {\n        // Handle the case where room creation failed\n        console.error('Error creating room:', response.statusText);\n      }\n    } catch (error) {\n      console.error('Error creating room:', error);\n    }\n  };\n\n  return (\n      <div>\n       <Header />\n       <div id=\"main\" className=\"contentOFF\" role=\"main\">\n         <div className=\"hero-content text-center\">\n            <div className=\"max-w-md\">\n              <div className=\"card\">\n                <div className=\"card-body\">\n                  <h2 className=\"card-title\">Select Avatar</h2>\n                  <div className=\"avatar-picker\"></div>\n                </div>\n              </div>\n              <button className=\"startbutton\" onClick={createRoomAPI}>Start new game</button>\n            </div>\n          </div>\n        </div>\n      </div>\n  );\n\n};\n\nexport default Game;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}